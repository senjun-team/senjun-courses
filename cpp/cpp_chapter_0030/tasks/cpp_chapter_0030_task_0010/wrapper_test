import boost.ut;
#include <cmath>

#INJECT-b585472fa

int main()
{
    using namespace boost::ut;

    "NAN vertical_flight_speed"_test = [] {
        expect(std::isnan(vertical_flight_speed(-1000, 1000, 2))) << "\nvertical_flight_speed(-1000, 1000, 2) must return NAN\n" << fatal;
        expect(std::isnan(vertical_flight_speed(1000, -1000, 2))) << "\nvertical_flight_speed(1000, -1000, 2) must return NAN\n" << fatal;
    };

    "INFINITY vertical_flight_speed"_test = [] {
        expect(std::isinf(vertical_flight_speed(1000, 1000, 0))) << "\nvertical_flight_speed(1000, 1000, 0) must return INF\n" << fatal;
        expect(std::isinf(vertical_flight_speed(1000, 1000, -2))) << "\nvertical_flight_speed(1000, 1000, -2) must return INF\n" << fatal;
    };

    "Valid vertical_flight_speed"_test = [] {
        expect(std::abs(900.0 - 920.0) / 2.0 == vertical_flight_speed(900.0, 920.0, 2)) << "\nvertical_flight_speed(900.0, 920.0, 2) must return 10.0\n" << fatal;
        expect(std::abs(3000.0 - 3500.0) / 17.0 == vertical_flight_speed(3000.0, 3500.0, 17)) << "\nvertical_flight_speed(3000.0, 3500.0, 17) must return 29.41176\n" << fatal;
    };
}
