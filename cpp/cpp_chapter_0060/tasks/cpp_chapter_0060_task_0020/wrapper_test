import boost.ut;
import std;

#INJECT-b585472fa

int main()
{
    using namespace boost::ut;

    "corner cases"_test = [] {
        expect(is_palindrome("") == false) << "Empty string is not a palindrome" << fatal;
        expect(is_palindrome("a") == true) << "String consisting only of one character is a palindrome" << fatal;
    };

    "is_palindrome() test cases"_test = [] {
        std::vector<std::pair<std::string, bool>> cases
        {
            {"11", true},
            {"to", false},
            {"eve", true},
            {"ten", false},
            {"222", true},
            {"122", false},
            {"221", false},
            {"tennet", true},
            {"123421", false},
            {"sum summus mus", true},
        };

        for(const auto & [s, plan]: cases)
        {
            expect(is_palindrome(s) == plan) << std::format("is_palindrome(\"{}\") returns wrong result", s) << fatal;
        }
    };
}
