#include "ut.hpp"
#include "test_helpers.h"

import std;

#INJECT-b585472fa

using namespace boost::ut;

void check_case(const std::vector<std::string> & v, const std::string & plan)
{
    std::string captured_text;
    auto stdout_receiver = [&captured_text](std::string&& txt) { captured_text = std::move(txt); };

    {
        hlp::stdout_capture_t capture(stdout_receiver);
        print_frequency(v);
    }

    expect(captured_text == plan)  << std::format("Invalid output for vector {}:\n{}", v, captured_text) << fatal;
}

int main()
{
    "simple cases"_test = [] {
        std::vector<std::pair<std::vector<std::string>, std::string>> cases {
            {{"login", "register", "login", "start_course"}, "2 login\n1 register\n1 start_course\n"},
            {{"a"}, "1 a\n"},
            {{"a", "a", "a", "a"}, "4 a\n"},
            {{"a", "b"}, "1 a\n1 b\n"},
            {{"a", "b", "b", "a"}, "2 a\n2 b\n"},
            {{"a", "b", "b", "a", "b"}, "3 b\n2 a\n"},
            {{"c", "b", "b", "a", "b"}, "3 b\n1 a\n1 c\n"},
        };

        for (const auto & [v, plan]: cases)
            check_case(v, plan);
    };
}
