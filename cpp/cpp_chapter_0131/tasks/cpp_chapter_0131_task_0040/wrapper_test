import boost.ut;
import TestHelpers;

import std;

#INJECT-b585472fa

using namespace boost::ut;

template<class T>
void check_case(std::vector<T> const & v, std::size_t plan)
{
    std::size_t fact = count_unique(v);
    expect(plan == fact) << std::format("count_unique() returns {} for vector {}. But expected result is {}", fact, v, plan) << fatal;
} 

int main()
{
    "simple cases"_test = [] {
        std::vector< std::pair<std::vector<int>, std::size_t> > cases = {
            { {}, 0 },
            { {1}, 1},
            { {-1, -1, -1}, 1},
            { {0, 1, 1, 1, 0}, 2},
            {{5, 5, 6, 6, 7, 7,}, 3}
        };

        for (const auto & [v, plan]: cases)
            check_case(v, plan);
    };

    "different cases"_test = [] {
        std::vector< std::pair<std::vector<std::string>, std::size_t> > cases = {
            { {"s"}, 1 },
            { {"s", "m", "s"}, 2},
        };

        for (const auto & [v, plan]: cases)
            check_case(v, plan);
    };
}
