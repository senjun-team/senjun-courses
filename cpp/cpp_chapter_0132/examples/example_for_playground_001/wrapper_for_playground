
class TildaString
{
public:
    explicit TildaString(std::size_t len)
    {
        m_data = std::string(len, '~');
    }

    TildaString(const char * s)
    {
        m_data = std::string(s);
    }
    
    std::string raw_data() const
    {
        return m_data;
    }
private:
    std::string m_data;
};

template<>
struct std::formatter<TildaString> : public std::formatter<std::string>
{
  using Parent = std::formatter<std::string>;
  auto format(const TildaString & s, std::format_context & ctx) const
  {
    return Parent::format(s.raw_data(), ctx);
  }
};

void show(TildaString s)
{
    std::println("TildaString: {}", s);
}

int main()
{
    show("3");
}