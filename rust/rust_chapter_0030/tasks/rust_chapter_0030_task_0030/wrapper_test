#INJECT-b585472fa

#[derive(Debug)]
enum TestResult {
    WrongResult
}

fn main() -> Result<(), TestResult> {

    let numbers_values = vec![
        vec![1, 1, 3, 1, 5, 1],
        vec![-1, 110, 1, -2, -1, -1, 2],
        vec![-100, -1, -30, -30, -100, -30],
        vec![5, 0, 100, -23, 0, 1, -23, -25],
        vec![],
    ];

    let checks = vec![
        vec![(1, 4), (3, 1), (100, 0), (12, 0)],
        vec![(-1, 3), (110, 1), (0, 0), (-5, 0)],
        vec![(-100, 2), (100, 0), (-30, 3)],
        vec![(0, 2), (100, 1), (1, 1), (507, 0), (-23, 2)],
        vec![(-1, 0), (110, 0), (0, 0), (-5, 0)],
    ];

    for i in 0..numbers_values.len() {
        let numbers = &numbers_values[i];
        for (desired, expected) in checks[i].iter() {
            let result = count(&numbers, *desired);
            if result != *expected {
                println!("Неправильный результат '{}' для входных значений '{:?}' и '{}', ожидаемый результат — {}.", result, numbers, desired, expected);
                return Err(TestResult::WrongResult); 
            }
        }
    }

    Ok(())
}
